@model BudgetBreakdownViewModel
@functions{
    public decimal TotalBudgetedExpenses() => Model.ExpenseCategories.Sum(ec => ec.BudgetedAmount);
    public decimal TotalBudgetedIncome() => Model.IncomeCategories.Sum(ic => ic.BudgetedAmount);
    public decimal TotalActualExpenses() => Model.Budget.ExpenseItems.Sum(ei => ei.Amount);
    public decimal TotalActualIncome() => Model.Budget.IncomeItems.Sum(ii => ii.Amount);
    public decimal GetBalance() => TotalActualIncome() - TotalActualExpenses();
    public decimal BudgetedDifference() => TotalBudgetedIncome() - TotalBudgetedExpenses();
    public decimal IncomeDifference() => TotalBudgetedIncome() - TotalActualIncome();
    public decimal ExpenseDifference() => TotalBudgetedExpenses() - TotalActualExpenses();
    public string PositiveOrNegative(decimal value)
    {
        if (value > 0)
        {
            return ("text-green-500");
        }
        else if (value == 0)
        {
            return ("text-black");
        }
        else
        {
            return ("text-red-500");
        }
    }
    
}

<div>
    <div>
        <div>
            <div>
                <h1 class="font-bold @PositiveOrNegative(GetBalance()) text-4xl"><a asp-action="Details" asp-controller="Budget" asp-route-id="@Model.Budget.BudgetId" class="text-black text-2xl font-normal">@Model.Budget.Description Balance:</a> $@GetBalance()</h1>
                <p>@Model.Budget.StartDate.ToString("MMM dd yyyy") to @Model.Budget.EndDate.ToString("MMM dd yyyy")</p>
            </div>
            <div>  
                <a asp-action="Edit" asp-controller="Budget" asp-route-id="@Model.Budget.BudgetId">Edit</a>
                <a asp-action="Delete" asp-controller="Budget" asp-route-id="@Model.Budget.BudgetId">Delete</a>
                <a asp-controller="Budget" asp-action="Transactions" asp-route-id="@Model.Budget.BudgetId">See Transactions</a>
            </div>
        </div>
        <div>
            <div>
                <h1>@Model.Budget.Description Statistics</h1>
            </div>
            <div class="flex flex-row">
                <div>
                    <p>Income:</p>
                    <p>@TotalActualIncome()</p>
                    <p>Expenses:</p>
                    <p>@TotalActualExpenses()</p>
                    <p>Balance:</p>
                    <p>@GetBalance()</p>
                </div>
                <div>
                    <p>Budgeted Income:</p>
                    <p>@TotalBudgetedIncome()</p>
                    <p>Budgeted Expenses:</p>
                    <p>@TotalBudgetedExpenses()</p>
                    <p>Budgeted Difference:</p>
                    <p>@BudgetedDifference()</p>
                </div>
                <div>
                    <p>Budgeted Expenses:</p>
                    <p>@TotalBudgetedExpenses()</p>
                    <p>Actual Expenses:</p>
                    <p>@TotalActualExpenses()</p>
                    <p>Expense Difference:</p>
                    <p>@ExpenseDifference()</p>
                </div>
                <div>
                    <p>Budgeted Income:</p>
                    <p>@TotalBudgetedIncome()</p>
                    <p>Actual Income:</p>
                    <p>@TotalActualIncome()</p>
                    <p>Income Difference:</p>
                    <p>@IncomeDifference()</p>
                </div>
            </div>
        </div>
        <div class="grid grid-cols-4 gap-4">
            <p>Income Category</p>
            <p>Expected</p>
            <p>Actual</p>
            <p>Difference</p>
        </div>

        @foreach (IncomeCategory ic in Model.IncomeCategories)
        {
            <div class="grid grid-cols-4 gap-4">
                <p>@ic.Description</p>
                <p>@ic.BudgetedAmount</p>
                <p>@ic.IncomeItems.Sum(ic => ic.Amount)</p>
                <p>@(ic.BudgetedAmount - ic.IncomeItems.Sum(ic => ic.Amount))</p>
            </div>
        }

        <div class="grid grid-cols-4 gap-4">
            <p>Expense Category</p>
            <p>Budgeted</p>
            <p>Spent</p>
            <p>Difference</p>
        </div>

        @foreach (ExpenseCategory ec in Model.ExpenseCategories)
        {
            <div class="grid grid-cols-4 gap-4">
                <p>@ec.Description</p>
                <p>@ec.BudgetedAmount</p>
                <p>@ec.ExpenseItems.Sum(ec => ec.Amount)</p>
                <p>@(ec.BudgetedAmount - ec.ExpenseItems.Sum(ec => ec.Amount))</p>
            </div>
        }
    </div>
</div>

