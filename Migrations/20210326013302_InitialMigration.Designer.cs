// <auto-generated />
using System;
using BudgetingApp.Models.RepositoryModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BudgetingApp.Migrations
{
    [DbContext(typeof(BudgetingContext))]
    [Migration("20210326013302_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.Budget", b =>
                {
                    b.Property<long>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BudgetId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.ExpenseCategory", b =>
                {
                    b.Property<long>("ExpenseCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BudgetId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BudgetedAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseCategoryId");

                    b.HasIndex("BudgetId");

                    b.ToTable("ExpenseCategories");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.ExpenseItem", b =>
                {
                    b.Property<long>("ExpenseItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("ExpenseCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseItemId");

                    b.HasIndex("ExpenseCategoryId");

                    b.ToTable("ExpenseItems");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.IncomeCategory", b =>
                {
                    b.Property<long>("IncomeCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BudgetId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("BudgetedAmount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncomeCategoryId");

                    b.HasIndex("BudgetId");

                    b.ToTable("IncomeCategories");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.IncomeItem", b =>
                {
                    b.Property<long>("IncomeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("IncomeCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncomeItemId");

                    b.HasIndex("IncomeCategoryId");

                    b.ToTable("IncomeItems");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.ExpenseCategory", b =>
                {
                    b.HasOne("BudgetingApp.Models.BudgetingModels.Budget", "Budget")
                        .WithMany("ExpenseCategories")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.ExpenseItem", b =>
                {
                    b.HasOne("BudgetingApp.Models.BudgetingModels.ExpenseCategory", "ExpenseCategory")
                        .WithMany("ExpenseItems")
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseCategory");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.IncomeCategory", b =>
                {
                    b.HasOne("BudgetingApp.Models.BudgetingModels.Budget", "Budget")
                        .WithMany("IncomeCategories")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.IncomeItem", b =>
                {
                    b.HasOne("BudgetingApp.Models.BudgetingModels.IncomeCategory", "IncomeCategory")
                        .WithMany("IncomeItems")
                        .HasForeignKey("IncomeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncomeCategory");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.Budget", b =>
                {
                    b.Navigation("ExpenseCategories");

                    b.Navigation("IncomeCategories");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.ExpenseCategory", b =>
                {
                    b.Navigation("ExpenseItems");
                });

            modelBuilder.Entity("BudgetingApp.Models.BudgetingModels.IncomeCategory", b =>
                {
                    b.Navigation("IncomeItems");
                });
#pragma warning restore 612, 618
        }
    }
}
