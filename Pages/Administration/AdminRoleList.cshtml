@page
@model AdminRoleListModel

<div>
    <div class="p-2 text-center text-2xl font-bold my-2 bg-gray-100 rounded-sm shadow-sm">
        <h1>Administration</h1>
    </div>
</div>
<div>
    <div class="bg-gray-50 shadow-lg border border-sm">
        <div class="p-2 text-center text-xl bg-gray-100 rounded-sm shadow-sm">
            <h1>Role List</h1>
        </div>

        <table class="border-separate table-auto w-full whitespace-no-wrap">
            <thead>
                <th>Role</th>
                <th>Members</th>
            </thead>
            <tbody class="bg-white text-center">
                @if (Model.Roles.Count() == 0)
                {
                    <td colspans="4" class="text-center">No Role</td>
                }
                else
                {
                    @foreach (IdentityRole r in Model.Roles)
                    {
                        <td colspan="1"><a asp-page="AdminViewRole" asp-route-id="@r.Id" class="underline hover:bg-gray-50 w-full block">@r.Name</a></td>
                        <td colspan="3">@(await Model.GetMembersString(r.Name))</td>    
                    }
                }
            </tbody>
        </table>
        <div class="w-full text-center">
            <a asp-page="AdminCreateRole" class="p-3 font-bold bg-gray-50 text-lg text-green-600 block w-full hover:bg-white hover:text-green-700">Create Role</a>
        </div>
    </div>
</div>

@functions {
    public class AdminRoleListModel: AdminPageModel
    {
        public UserManager<IdentityUser> UserManager;
        public RoleManager<IdentityRole> RoleManager;
        public IEnumerable<IdentityRole> Roles {get; set;}
        
        public AdminRoleListModel (UserManager<IdentityUser> userManager, RoleManager<IdentityRole> roleManager)
        {
            UserManager = userManager;
            RoleManager = roleManager;
        }

        public void OnGet()
        {
            Roles = RoleManager.Roles;
        }

        public async Task<string> GetMembersString(string role)
        {
            IEnumerable<IdentityUser> users = await UserManager.GetUsersInRoleAsync(role);
            string result = users.Count() == 0 ? "No Members" : string.Join(", ", users.Take(3).Select(u => u.UserName).ToArray());
            return users.Count() > 3 ? $"{result}, plus others": result;

        }
    }
}