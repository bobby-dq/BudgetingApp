@page
@model AdminCreateRoleModel

<div>
    <div class="p-2 text-center text-2xl font-bold my-2 bg-gray-100 rounded-sm shadow-sm">
        <h1>Administration</h1>
    </div>
</div>
<div>
    <div class="bg-gray-50 shadow-lg border border-sm">
        <div class="p-2 text-center text-xl bg-gray-100 rounded-sm shadow-sm">
            <h1>Create Role</h1>
        </div>
        <div class="p-2">
            <form method="post">
                <div asp-validation-summary="All" class="text-red-500"></div>
                <div class="mb-5">
                    <div>
                        <label asp-for="Name"></label>
                    </div>
                    <div>
                        <input name="Name" value="@Model.Name" class="text-black rounded-md w-full border border-indigo-100 p-1 focus:border-transparent focus:outline-none focus:ring-2 focus:ring-blue-200">
                    </div>
                </div>
                <div class="bg-green-200 hover:bg-green-300  p-2 -m-2 mt-2 rounded-b-sm">
                    <button type="submit" class="w-full font-bold">Create Role</button>
                </div>
            </form>
        </div>
    </div>
    <div class="mt-5 bg-gray-200 border border-gray-300 rounded-lg shadow-lg  mb-10 flex justify-between">
        <a asp-page="AdminUserList" class="text-center w-full p-2 hover:bg-gray-300">Back To User List</a>
    </div>
</div>

@functions {
    public class AdminCreateRoleModel:AdminPageModel 
    {
        public RoleManager<IdentityRole> RoleManager;


        [BindProperty]
        [Required]
        public string Name {get; set;}

        public AdminCreateRoleModel(RoleManager<IdentityRole> roleManager)
        {
            RoleManager = roleManager;
        }

        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                IdentityRole role = new IdentityRole
                {
                    Name = Name
                };
                IdentityResult result = await RoleManager.CreateAsync(role);
                if (result.Succeeded)
                {
                    return RedirectToPage("AdminRoleList");
                }
                foreach(IdentityError err in result.Errors)
                {
                    ModelState.AddModelError("", err.Description);
                }
            }
            return Page();
        }

    }
}