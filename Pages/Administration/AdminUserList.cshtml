@page
@model AdminUserListModel

<div>
    <div class="p-2 text-center text-2xl font-bold my-2 bg-gray-100 rounded-sm shadow-sm">
        <h1>Administration</h1>
    </div>
</div>
<div>
    <div class="bg-gray-50 shadow-lg border border-sm">
        <div class="p-2 text-center text-xl bg-gray-100 rounded-sm shadow-sm">
            <h1>User List</h1>
        </div>

        <table class="border-separate table-auto w-full whitespace-no-wrap">
            <thead>
                <th>User</th>
                <th>Id</th>
                <th>Email</th>
            </thead>
            <tbody class="bg-white text-center">
                @if (Model.Users.Count() == 0)
                {
                    <td colspans="3" class="text-center">No Users</td>
                }
                else
                {
                    @foreach (IdentityUser u in Model.Users)
                    {
                        <tr>
                            <td><a asp-page="AdminViewUser" asp-route-id="@u.Id" class="underline hover:bg-gray-50 w-full block">@u.UserName</a></td>
                            <td class="">@u.Id</td>
                            <td class="">@u.Email</td>
                        </tr>
                                        
                    }
                }
                
            </tbody>
        </table>
        <div class="w-full text-center">
            <a asp-page="AdminCreateUser" class="p-3 font-bold bg-gray-50 text-lg text-green-600 block w-full hover:bg-white hover:text-green-700">Create</a>
        </div>
    </div>

    <div class="my-10">
        <a asp-page="AdminRoleList" class="p-3 font-bold bg-gray-50 text-lg py-1 px-3 hover:bg-gray-100 hover:text-gray-900 border border-indigo-50">See Roles</a>
    </div>
</div>

@functions {
    public class AdminUserListModel: AdminPageModel
    {
        // Field Entities
        public UserManager<IdentityUser> UserManager;
        public IEnumerable<IdentityUser> Users {get; set;}

        // Constructors
        public AdminUserListModel(UserManager<IdentityUser> userManager)
        {
            UserManager = userManager;
        }
        

        // Methods
        public void OnGet()
        {
            Users = UserManager.Users;
        }

    }
}