@page "{id}"
@model AdminDeleteRoleModel

<div>
    <div class="p-2 text-center text-2xl font-bold my-2 bg-gray-100 rounded-sm shadow-sm">
        <h1>Administration</h1>
    </div>
</div>
<div>
    <div class="bg-gray-50 shadow-lg border border-sm">
        <div class="p-2 text-center text-xl bg-gray-100 rounded-sm shadow-sm">
            <h1>Delete Role: @Model.Role.Name</h1>
        </div>
        <div class="p-2">
            <form method="post">
                <input type="hidden" name="rolename" value="@Model.Role.Name"
                <div asp-validation-summary="All" class="text-red-500"></div>
                <div class="bg-gray-50 shadow-lg border border-sm">
                    <div class="p-2 text-center text-xl bg-gray-100 rounded-sm shadow-sm">
                        <h1>@Model.Role.Name Members</h1>
                    </div>
                    <table class="border-separate table-auto w-full whitespace-no-wrap">
                        <thead>
                            <th>User</th>
                            <th>Email</th>
                            <th></th>
                        </thead>
                        <tbody class="bg-white text-center">
                            @if ((await Model.Members()).Count() == 0)
                            {
                                <td colspans="3" class="text-center">No Members</td>
                            }
                            else
                            {
                                @foreach (IdentityUser u in await Model.Members())
                                {
                                    <td><a asp-page="AdminViewUser" asp-route-id="@u.Id" class="underline hover:bg-gray-50 w-full block">@u.UserName</a></td>
                                    <td class="">@u.Email</td>
                                    <td></td>                
                                }
                            }
                        </tbody>
                    </table>
                    <div class="p-2 text-center text-xl bg-gray-100 rounded-sm shadow-sm">
                        <h1>@Model.Role.Name Non-Members</h1>
                    </div>
                    <table class="border-separate table-auto w-full whitespace-no-wrap">
                        <thead>
                            <th>User</th>
                            <th>Email</th>
                            <th></th>
                        </thead>
                        <tbody class="bg-white text-center">
                            @if ((await Model.NonMembers()).Count() == 0)
                            {
                                <td colspans="3" class="text-center">No Non-Members</td>
                            }
                            else
                            {
                                @foreach (IdentityUser u in await Model.NonMembers())
                                {
                                    <td><a asp-page="AdminViewUser" asp-route-id="@u.Id" class="underline hover:bg-gray-50 w-full block">@u.UserName</a></td>
                                    <td class="">@u.Email</td>
                                    <td></td>                
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div class="bg-green-200 hover:bg-green-300  p-2 -m-2 mt-2 rounded-b-sm">
                    <button type="submit" class="w-full font-bold">Delete @Model.Role.Name</button>
            </form>
        </div>
    </div>
    <div class="mt-5 bg-gray-200 border border-gray-300 rounded-lg shadow-lg  mb-10 flex justify-between">
        <a asp-page="AdminEditRole" asp-route-id="@Model.Role.Id" class="text-center w-full p-2 bg-yellow-300 hover:bg-yellow-400">Edit @Model.Role.Name</a>
        <a asp-page="AdminRoleList" class="text-center w-full p-2 hover:bg-gray-300">Back To Role List</a>
    </div>
</div>


@functions {
    public class AdminDeleteRoleModel: AdminPageModel
    {
        public UserManager<IdentityUser> UserManager;
        public RoleManager<IdentityRole> RoleManager;
        public IdentityRole Role {get; set;}

        public AdminDeleteRoleModel (UserManager<IdentityUser> userManager, RoleManager<IdentityRole> roleManager)
        {
            UserManager = userManager;
            RoleManager = roleManager;
        }

        public Task<IList<IdentityUser>> Members() => UserManager.GetUsersInRoleAsync(Role.Name);
        public async Task<IEnumerable<IdentityUser>> NonMembers() => UserManager.Users.ToList().Except(await Members());
        public async Task OnGetAsync(string id)
        {
            Role = await RoleManager.FindByIdAsync(id);
        }

        public async Task<IActionResult> OnPostAsync()
        {
            await RoleManager.DeleteAsync(Role);
            return RedirectToPage("AdminRoleList");
        }
    }
}